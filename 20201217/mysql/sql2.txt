カラム別名 AS句
SELECT title AS タイトル,price AS 価格 FROM books;

重複削除(同一内容を表示しない)
SELECT DISTINCT category FROM books;
	
取得カラムにかける色々
SELECT price,price+100,'固定値' FROM books;

切り捨てfloor() (床)
SELECT floor(120*1.08);

3桁ごと,挿入 format(値,小数点以下の桁数)
SELECT format(12345678.901,1);

CASE WHEN THEN(switch文的な分岐)
SELECT title AS 書名,category AS 分類,
CASE category 
WHEN '雑誌' THEN '1F' 
WHEN '漫画' THEN '1F'
ELSE '2F'
END AS 階
FROM books;


CASE WHEN THEN (if文的な分岐)

SELECT title AS 書名,price AS 価格,
CASE
WHEN price < 500 THEN 'えんぴつ'
WHEN price <1000 THEN 'キーホルダー'
WHEN price <3000 THEN 'ポスター'
ELSE 'トートバッグ'
END AS プレゼント
FROM books;

文字数　char_length()
SELECT title,char_length(title) FROM books;

現在日の入力 curdate()
INSERT INTO books(title,price,updated)
VALUES('SQL入門',2800,curdate());

現在日時の入力　now()
SELECT now();

文字列連結　concat(文字列,文字列,・・・・・・・)
SELECT concat(title,':',price,'円') FROM books;

最初のnullでない値を返す。 coalesce(引数,引数,・・・・)
SELECT title,coalesce(updated,'更新日未記入')
FROM books;

副問い合わせ(subquery)(最初にカッコ内の処理を行いその結果を利用)
SELECT title,price FROM books
WHERE price=(SELECT max(price) FROM books);

//内部結合 JOIN
SELECT * FROM cds
JOIN categories
ON cds.cat_id=categories.id;

//左結合　LEFT JOIN
SELECT * FROM cds
LEFT JOIN categories
ON cds.cat_id=categories.id;

//右結合 RIGHT JOIN
SELECT * FROM cds
RIGHT JOIN categories
ON cds.cat_id=categories.id;

//取得カラムの指定 (原則　テーブル名.カラム名で指定)
SELECT cds.title,categories.category,cds.price FROM cds
LEFT JOIN categories
ON cds.cat_id=categories.id;

//テーブルに別名 (別名をつけた場合はその文脈中では別名を使う)
SELECT cd.title,cat.category,cd.price FROM cds AS cd
LEFT JOIN categories AS cat
ON cd.cat_id=cat.id;
